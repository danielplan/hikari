var Y=Object.defineProperty;var R=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var S=(Q,F,B)=>F in Q?Y(Q,F,{enumerable:!0,configurable:!0,writable:!0,value:B}):Q[F]=B,J=(Q,F)=>{for(var B in F||(F={}))G.call(F,B)&&S(Q,B,F[B]);if(R)for(var B of R(F))s.call(F,B)&&S(Q,B,F[B]);return Q};const N=function(){const F=document.createElement("link").relList;if(F&&F.supports&&F.supports("modulepreload"))return;for(const U of document.querySelectorAll('link[rel="modulepreload"]'))l(U);new MutationObserver(U=>{for(const d of U)if(d.type==="childList")for(const Z of d.addedNodes)Z.tagName==="LINK"&&Z.rel==="modulepreload"&&l(Z)}).observe(document,{childList:!0,subtree:!0});function B(U){const d={};return U.integrity&&(d.integrity=U.integrity),U.referrerpolicy&&(d.referrerPolicy=U.referrerpolicy),U.crossorigin==="use-credentials"?d.credentials="include":U.crossorigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function l(U){if(U.ep)return;U.ep=!0;const d=B(U);fetch(U.href,d)}};N();function u(Q,F,B){const l=document.createElement("label");l.innerText=Q,l.htmlFor=Q;const U=document.createElement("input");U.value=F,U.name=Q;const d=document.createElement("div");return d.classList.add("control-item"),d.appendChild(l),d.appendChild(U),B.appendChild(d),{controlParent:d,controlElement:U}}function n(Q,F,B,l,U){const{controlElement:d,controlParent:Z}=u(B,l.toString(),U);return d.type="range",d.min=Q.toString(),d.max=F.toString(),d.classList.add("range-element"),Z.appendChild(K(d)),d}function X(Q,F){const{controlElement:B}=u(Q,"1",F);return B.type="checkbox",B.classList.add("checkbox-element"),B}function K(Q){const F=document.createElement("input");return F.classList.add("number-element"),F.min=Q.min,F.max=Q.max,F.type="number",F.value=Q.value,Q.addEventListener("input",()=>{F.value=Q.value}),F.addEventListener("change",()=>{Q.value=F.value,Q.dispatchEvent(new InputEvent("change"))}),F}function a(Q,F,B,l,U,d){const Z=Object.values(l).map(m=>m.checked?1:0),i=Object.values(U).map(m=>Number.parseInt(m.value)),V=F.getImageData(0,0,Q.width,Q.height);d.postMessage({settingsValues:Z,controlValues:i,imageData:V}),d.onmessage=m=>{const b=m.data;B.putImageData(b,0,0)}}function k(Q,F,B,l){const U=document.createElement("canvas"),d=Q.width,Z=Q.height;let i=0,V=0,m=1920;d>Z?(m=Math.min(m,d),i=m,V=Z*m/d):(m=Math.min(m,Z),V=m,i=d*m/Z),U.width=i,U.height=V;const b=U.getContext("2d");b.drawImage(Q,0,0,U.width,U.height),a(U,b,b,F,B,l),l.onmessage=()=>{const y=U.toDataURL("image/jpg"),W=document.createElement("a");W.download="hikari-export.jpg",W.href=y,W.click(),W.remove()}}const h="KCgpPT57KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBJQT1mdW5jdGlvbigpe3ZhciBwPWRvY3VtZW50LmN1cnJlbnRTY3JpcHQmJmRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjfHxuZXcgVVJMKCJyZW5kZXJXb3JrZXIuanMiLGRvY3VtZW50LmJhc2VVUkkpLmhyZWY7cmV0dXJuIGZ1bmN0aW9uKHIpe3I9cnx8e307dmFyIHI9dHlwZW9mIHIhPSJ1bmRlZmluZWQiP3I6e30sYix2O3IucmVhZHk9bmV3IFByb21pc2UoZnVuY3Rpb24oQSxuKXtiPUEsdj1ufSk7dmFyIHU9e30sSTtmb3IoSSBpbiByKXIuaGFzT3duUHJvcGVydHkoSSkmJih1W0ldPXJbSV0pO3ZhciBSPSExLFE9ITEsbD0hMSxLPSExO1I9dHlwZW9mIHdpbmRvdz09Im9iamVjdCIsUT10eXBlb2YgaW1wb3J0U2NyaXB0cz09ImZ1bmN0aW9uIixsPXR5cGVvZiBwcm9jZXNzPT0ib2JqZWN0IiYmdHlwZW9mIHByb2Nlc3MudmVyc2lvbnM9PSJvYmplY3QiJiZ0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlPT0ic3RyaW5nIixLPSFSJiYhbCYmIVE7dmFyIG89IiI7ZnVuY3Rpb24gb0EoQSl7cmV0dXJuIHIubG9jYXRlRmlsZT9yLmxvY2F0ZUZpbGUoQSxvKTpvK0F9dmFyIEgsVCxoLE4sXztsPyhRP289cmVxdWlyZSgicGF0aCIpLmRpcm5hbWUobykrIi8iOm89X19kaXJuYW1lKyIvIixIPWZ1bmN0aW9uKG4sdCl7dmFyIGU9dyhuKTtyZXR1cm4gZT90P2U6ZS50b1N0cmluZygpOihOfHwoTj1yZXF1aXJlKCJmcyIpKSxffHwoXz1yZXF1aXJlKCJwYXRoIikpLG49Xy5ub3JtYWxpemUobiksTi5yZWFkRmlsZVN5bmMobix0P251bGw6InV0ZjgiKSl9LGg9ZnVuY3Rpb24obil7dmFyIHQ9SChuLCEwKTtyZXR1cm4gdC5idWZmZXJ8fCh0PW5ldyBVaW50OEFycmF5KHQpKSxkKHQuYnVmZmVyKSx0fSxwcm9jZXNzLmFyZ3YubGVuZ3RoPjEmJnByb2Nlc3MuYXJndlsxXS5yZXBsYWNlKC9cXC9nLCIvIikscHJvY2Vzcy5hcmd2LnNsaWNlKDIpLHByb2Nlc3Mub24oInVuY2F1Z2h0RXhjZXB0aW9uIixmdW5jdGlvbihBKXtpZighKEEgaW5zdGFuY2VvZiBUQSkpdGhyb3cgQX0pLHByb2Nlc3Mub24oInVuaGFuZGxlZFJlamVjdGlvbiIsUyksci5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIltFbXNjcmlwdGVuIE1vZHVsZSBvYmplY3RdIn0pOks/KHR5cGVvZiByZWFkIT0idW5kZWZpbmVkIiYmKEg9ZnVuY3Rpb24obil7dmFyIHQ9dyhuKTtyZXR1cm4gdD9lQSh0KTpyZWFkKG4pfSksaD1mdW5jdGlvbihuKXt2YXIgdDtyZXR1cm4gdD13KG4pLHR8fCh0eXBlb2YgcmVhZGJ1ZmZlcj09ImZ1bmN0aW9uIj9uZXcgVWludDhBcnJheShyZWFkYnVmZmVyKG4pKToodD1yZWFkKG4sImJpbmFyeSIpLGQodHlwZW9mIHQ9PSJvYmplY3QiKSx0KSl9LHR5cGVvZiBzY3JpcHRBcmdzIT0idW5kZWZpbmVkIiYmc2NyaXB0QXJncyx0eXBlb2YgcHJpbnQhPSJ1bmRlZmluZWQiJiYodHlwZW9mIGNvbnNvbGU9PSJ1bmRlZmluZWQiJiYoY29uc29sZT17fSksY29uc29sZS5sb2c9cHJpbnQsY29uc29sZS53YXJuPWNvbnNvbGUuZXJyb3I9dHlwZW9mIHByaW50RXJyIT0idW5kZWZpbmVkIj9wcmludEVycjpwcmludCkpOihSfHxRKSYmKFE/bz1zZWxmLmxvY2F0aW9uLmhyZWY6dHlwZW9mIGRvY3VtZW50IT0idW5kZWZpbmVkIiYmZG9jdW1lbnQuY3VycmVudFNjcmlwdCYmKG89ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmMpLHAmJihvPXApLG8uaW5kZXhPZigiYmxvYjoiKSE9PTA/bz1vLnN1YnN0cigwLG8ubGFzdEluZGV4T2YoIi8iKSsxKTpvPSIiLEg9ZnVuY3Rpb24oQSl7dHJ5e3ZhciBuPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4gbi5vcGVuKCJHRVQiLEEsITEpLG4uc2VuZChudWxsKSxuLnJlc3BvbnNlVGV4dH1jYXRjaChlKXt2YXIgdD13KEEpO2lmKHQpcmV0dXJuIGVBKHQpO3Rocm93IGV9fSxRJiYoaD1mdW5jdGlvbihBKXt0cnl7dmFyIG49bmV3IFhNTEh0dHBSZXF1ZXN0O3JldHVybiBuLm9wZW4oIkdFVCIsQSwhMSksbi5yZXNwb25zZVR5cGU9ImFycmF5YnVmZmVyIixuLnNlbmQobnVsbCksbmV3IFVpbnQ4QXJyYXkobi5yZXNwb25zZSl9Y2F0Y2goZSl7dmFyIHQ9dyhBKTtpZih0KXJldHVybiB0O3Rocm93IGV9fSksVD1mdW5jdGlvbihBLG4sdCl7dmFyIGU9bmV3IFhNTEh0dHBSZXF1ZXN0O2Uub3BlbigiR0VUIixBLCEwKSxlLnJlc3BvbnNlVHlwZT0iYXJyYXlidWZmZXIiLGUub25sb2FkPWZ1bmN0aW9uKCl7aWYoZS5zdGF0dXM9PTIwMHx8ZS5zdGF0dXM9PTAmJmUucmVzcG9uc2Upe24oZS5yZXNwb25zZSk7cmV0dXJufXZhciBmPXcoQSk7aWYoZil7bihmLmJ1ZmZlcik7cmV0dXJufXQoKX0sZS5vbmVycm9yPXQsZS5zZW5kKG51bGwpfSksci5wcmludHx8Y29uc29sZS5sb2cuYmluZChjb25zb2xlKTt2YXIgRj1yLnByaW50RXJyfHxjb25zb2xlLndhcm4uYmluZChjb25zb2xlKTtmb3IoSSBpbiB1KXUuaGFzT3duUHJvcGVydHkoSSkmJihyW0ldPXVbSV0pO3U9bnVsbCxyLmFyZ3VtZW50cyxyLnRoaXNQcm9ncmFtLHIucXVpdDt2YXIgRDtyLndhc21CaW5hcnkmJihEPXIud2FzbUJpbmFyeSksci5ub0V4aXRSdW50aW1lLHR5cGVvZiBXZWJBc3NlbWJseSE9Im9iamVjdCImJlMoIm5vIG5hdGl2ZSB3YXNtIHN1cHBvcnQgZGV0ZWN0ZWQiKTt2YXIgWCx6PSExO2Z1bmN0aW9uIGQoQSxuKXtBfHxTKCJBc3NlcnRpb24gZmFpbGVkOiAiK24pfWZ1bmN0aW9uIFkoQSl7dmFyIG49clsiXyIrQV07cmV0dXJuIGQobiwiQ2Fubm90IGNhbGwgdW5rbm93biBmdW5jdGlvbiAiK0ErIiwgbWFrZSBzdXJlIGl0IGlzIGV4cG9ydGVkIiksbn1mdW5jdGlvbiBqKEEsbix0LGUsZil7dmFyIGc9e3N0cmluZzpmdW5jdGlvbihDKXt2YXIgbT0wO2lmKEMhPW51bGwmJkMhPT0wKXt2YXIgc0E9KEMubGVuZ3RoPDwyKSsxO209TyhzQSksUUEoQyxtLHNBKX1yZXR1cm4gbX0sYXJyYXk6ZnVuY3Rpb24oQyl7dmFyIG09TyhDLmxlbmd0aCk7cmV0dXJuIHVBKEMsbSksbX19O2Z1bmN0aW9uIGEoQyl7cmV0dXJuIG49PT0ic3RyaW5nIj9DQShDKTpuPT09ImJvb2xlYW4iP0Jvb2xlYW4oQyk6Q312YXIgaT1ZKEEpLHM9W10sRT0wO2lmKGUpZm9yKHZhciBjPTA7YzxlLmxlbmd0aDtjKyspe3ZhciBnQT1nW3RbY11dO2dBPyhFPT09MCYmKEU9YUEoKSksc1tjXT1nQShlW2NdKSk6c1tjXT1lW2NdfXZhciBxPWkuYXBwbHkobnVsbCxzKTtyZXR1cm4gcT1hKHEpLEUhPT0wJiZmQShFKSxxfWZ1bmN0aW9uIEJBKEEsbix0LGUpe3Q9dHx8W107dmFyIGY9dC5ldmVyeShmdW5jdGlvbihhKXtyZXR1cm4gYT09PSJudW1iZXIifSksZz1uIT09InN0cmluZyI7cmV0dXJuIGcmJmYmJiFlP1koQSk6ZnVuY3Rpb24oKXtyZXR1cm4gaihBLG4sdCxhcmd1bWVudHMpfX12YXIgVj10eXBlb2YgVGV4dERlY29kZXIhPSJ1bmRlZmluZWQiP25ldyBUZXh0RGVjb2RlcigidXRmOCIpOnZvaWQgMDtmdW5jdGlvbiBjQShBLG4sdCl7Zm9yKHZhciBlPW4rdCxmPW47QVtmXSYmIShmPj1lKTspKytmO2lmKGYtbj4xNiYmQS5zdWJhcnJheSYmVilyZXR1cm4gVi5kZWNvZGUoQS5zdWJhcnJheShuLGYpKTtmb3IodmFyIGc9IiI7bjxmOyl7dmFyIGE9QVtuKytdO2lmKCEoYSYxMjgpKXtnKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGEpO2NvbnRpbnVlfXZhciBpPUFbbisrXSY2MztpZigoYSYyMjQpPT0xOTIpe2crPVN0cmluZy5mcm9tQ2hhckNvZGUoKGEmMzEpPDw2fGkpO2NvbnRpbnVlfXZhciBzPUFbbisrXSY2MztpZigoYSYyNDApPT0yMjQ/YT0oYSYxNSk8PDEyfGk8PDZ8czphPShhJjcpPDwxOHxpPDwxMnxzPDw2fEFbbisrXSY2MyxhPDY1NTM2KWcrPVN0cmluZy5mcm9tQ2hhckNvZGUoYSk7ZWxzZXt2YXIgRT1hLTY1NTM2O2crPVN0cmluZy5mcm9tQ2hhckNvZGUoNTUyOTZ8RT4+MTAsNTYzMjB8RSYxMDIzKX19cmV0dXJuIGd9ZnVuY3Rpb24gQ0EoQSxuKXtyZXR1cm4gQT9jQShrLEEsbik6IiJ9ZnVuY3Rpb24gRUEoQSxuLHQsZSl7aWYoIShlPjApKXJldHVybiAwO2Zvcih2YXIgZj10LGc9dCtlLTEsYT0wO2E8QS5sZW5ndGg7KythKXt2YXIgaT1BLmNoYXJDb2RlQXQoYSk7aWYoaT49NTUyOTYmJmk8PTU3MzQzKXt2YXIgcz1BLmNoYXJDb2RlQXQoKythKTtpPTY1NTM2KygoaSYxMDIzKTw8MTApfHMmMTAyM31pZihpPD0xMjcpe2lmKHQ+PWcpYnJlYWs7blt0KytdPWl9ZWxzZSBpZihpPD0yMDQ3KXtpZih0KzE+PWcpYnJlYWs7blt0KytdPTE5MnxpPj42LG5bdCsrXT0xMjh8aSY2M31lbHNlIGlmKGk8PTY1NTM1KXtpZih0KzI+PWcpYnJlYWs7blt0KytdPTIyNHxpPj4xMixuW3QrK109MTI4fGk+PjYmNjMsblt0KytdPTEyOHxpJjYzfWVsc2V7aWYodCszPj1nKWJyZWFrO25bdCsrXT0yNDB8aT4+MTgsblt0KytdPTEyOHxpPj4xMiY2MyxuW3QrK109MTI4fGk+PjYmNjMsblt0KytdPTEyOHxpJjYzfX1yZXR1cm4gblt0XT0wLHQtZn1mdW5jdGlvbiBRQShBLG4sdCl7cmV0dXJuIEVBKEEsayxuLHQpfWZ1bmN0aW9uIHVBKEEsbil7Wi5zZXQoQSxuKX12YXIgWixrO2Z1bmN0aW9uIHlBKEEpe3IuSEVBUDg9Wj1uZXcgSW50OEFycmF5KEEpLHIuSEVBUDE2PW5ldyBJbnQxNkFycmF5KEEpLHIuSEVBUDMyPW5ldyBJbnQzMkFycmF5KEEpLHIuSEVBUFU4PWs9bmV3IFVpbnQ4QXJyYXkoQSksci5IRUFQVTE2PW5ldyBVaW50MTZBcnJheShBKSxyLkhFQVBVMzI9bmV3IFVpbnQzMkFycmF5KEEpLHIuSEVBUEYzMj1uZXcgRmxvYXQzMkFycmF5KEEpLHIuSEVBUEY2ND1uZXcgRmxvYXQ2NEFycmF5KEEpfXIuSU5JVElBTF9NRU1PUlk7dmFyIEoseD1bXSwkPVtdLHdBPVtdLE09W107JC5wdXNoKHtmdW5jOmZ1bmN0aW9uKCl7aUEoKX19KTtmdW5jdGlvbiBSQSgpe2lmKHIucHJlUnVuKWZvcih0eXBlb2Ygci5wcmVSdW49PSJmdW5jdGlvbiImJihyLnByZVJ1bj1bci5wcmVSdW5dKTtyLnByZVJ1bi5sZW5ndGg7KWxBKHIucHJlUnVuLnNoaWZ0KCkpO0coeCl9ZnVuY3Rpb24gbUEoKXtHKCQpfWZ1bmN0aW9uIHBBKCl7Ryh3QSl9ZnVuY3Rpb24gdkEoKXtpZihyLnBvc3RSdW4pZm9yKHR5cGVvZiByLnBvc3RSdW49PSJmdW5jdGlvbiImJihyLnBvc3RSdW49W3IucG9zdFJ1bl0pO3IucG9zdFJ1bi5sZW5ndGg7KWhBKHIucG9zdFJ1bi5zaGlmdCgpKTtHKE0pfWZ1bmN0aW9uIGxBKEEpe3gudW5zaGlmdChBKX1mdW5jdGlvbiBoQShBKXtNLnVuc2hpZnQoQSl9dmFyIHk9MCxVPW51bGw7ZnVuY3Rpb24gRkEoQSl7eSsrLHIubW9uaXRvclJ1bkRlcGVuZGVuY2llcyYmci5tb25pdG9yUnVuRGVwZW5kZW5jaWVzKHkpfWZ1bmN0aW9uIERBKEEpe2lmKHktLSxyLm1vbml0b3JSdW5EZXBlbmRlbmNpZXMmJnIubW9uaXRvclJ1bkRlcGVuZGVuY2llcyh5KSx5PT0wJiZVKXt2YXIgbj1VO1U9bnVsbCxuKCl9fXIucHJlbG9hZGVkSW1hZ2VzPXt9LHIucHJlbG9hZGVkQXVkaW9zPXt9O2Z1bmN0aW9uIFMoQSl7ci5vbkFib3J0JiZyLm9uQWJvcnQoQSksQSs9IiIsRihBKSx6PSEwLEE9ImFib3J0KCIrQSsiKS4gQnVpbGQgd2l0aCAtcyBBU1NFUlRJT05TPTEgZm9yIG1vcmUgaW5mby4iO3ZhciBuPW5ldyBXZWJBc3NlbWJseS5SdW50aW1lRXJyb3IoQSk7dGhyb3cgdihuKSxufWZ1bmN0aW9uIEFBKEEsbil7cmV0dXJuIFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aD9BLnN0YXJ0c1dpdGgobik6QS5pbmRleE9mKG4pPT09MH12YXIgbkE9ImRhdGE6YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2Jhc2U2NCwiO2Z1bmN0aW9uIFAoQSl7cmV0dXJuIEFBKEEsbkEpfXZhciBVQT0iZmlsZTovLyI7ZnVuY3Rpb24gckEoQSl7cmV0dXJuIEFBKEEsVUEpfXZhciBCPSJkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsQUdGemJRRUFBQUFCVEE1Z0FueDhBWHhnQUFCZ0FYOEFZQUovZndCZ0JIOS9mMzhBWUFOL2Yzd0FZQUovZkFCZ0EzOThmUUJnQTM5OGZBQmdCWDk4Zkh4L0FHQUFBWDlnQVg4QmYyQUJmd0Y5WUFGOEFYd0RFQThKQVFBQUNBVUhCZ01NQ3dJS0RRUUVCUUZ3QVFFQkJRWUJBWUFDZ0FJR0NRRi9BVUdRaU1BQ0N3Y2RCd0ZoQWdBQllnQUJBV01BRGdGa0FBd0JaUUFMQVdZQUNnRm5BUUFLK3hnUDBRWUJBWDBDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBUkI0Z0JyRGhnR0JRa0pDUU1KQ1FrSkNRZ0pBUWNKQUFrRUNRa0pDUUlKQ3lBRFJBQUFBQUFBQUNSQVpTQURSQUFBQUFBQVFIVkFaSEpGRFFnTUNRc2dBMFFBQUFBQUFBQkVRR1VnQTBRQUFBQUFBQUFrUUdSeFJRMEhEQWdMSUFORUFBQUFBQUFBVGtCbElBTkVBQUFBQUFBQVJFQmtjVVVOQmd3SEN5QURSQUFBQUFBQVFHQkFaU0FEUkFBQUFBQUFBRTVBWkhGRkRRVU1CZ3NnQTBRQUFBQUFBQUJrUUdVZ0EwUUFBQUFBQUVCZ1FHUnhSUTBFREFVTElBTkVBQUFBQUFDQWEwQmxJQU5FQUFBQUFBQUFaRUJrY1VVTkF3d0VDeUFEUkFBQUFBQUFRSEJBWlNBRFJBQUFBQUFBZ0d0QVpIRkZEUUlNQXdzZ0EwUUFBQUFBQU1CeVFHVWdBMFFBQUFBQUFFQndRR1J4UlEwQkRBSUxJQU5FQUFBQUFBQkFkVUJsSUFORUFBQUFBQURBY2tCa2NVVU5BQ0FBQW44Q2Z5QUFMUUFBSWdTeklBSzJJZ1dUdXlBQm9pSUNtVVFBQUFBQUFBRGdRV01FUUNBQ3Fnd0JDMEdBZ0lDQWVBc2dCR29pQkVFQVRnUkFJQVJCL3dFZ0JFSC9BVWdiUWY4QmNRd0JDMEVBQ3pvQUFDQUFBbjhDZnlBQUxRQUJJZ1N6SUFXVHV5QUJvaUlDbVVRQUFBQUFBQURnUVdNRVFDQUNxZ3dCQzBHQWdJQ0FlQXNnQkdvaUJFRUFUZ1JBSUFSQi93RWdCRUgvQVVnYlFmOEJjUXdCQzBFQUN6b0FBU0FBQW44Q2Z5QUFMUUFDSWdDeklBV1R1eUFCb2lJQm1VUUFBQUFBQUFEZ1FXTUVRQ0FCcWd3QkMwR0FnSUNBZUFzZ0FHb2lBRUVBVGdSQUlBQkIvd0VnQUVIL0FVZ2JRZjhCY1F3QkMwRUFDem9BQWdzUEN5QUFBbjhDZnlBQUxRQUFJZ1N6SUFLMklnV1R1eUFCb2lJQ21VUUFBQUFBQUFEZ1FXTUVRQ0FDcWd3QkMwR0FnSUNBZUFzZ0JHb2lCRUVBVGdSQUlBUkIvd0VnQkVIL0FVZ2JRZjhCY1F3QkMwRUFDem9BQUNBQUFuOENmeUFBTFFBQklnU3pJQVdUdXlBQm9pSUNtVVFBQUFBQUFBRGdRV01FUUNBQ3Fnd0JDMEdBZ0lDQWVBc2dCR29pQkVFQVRnUkFJQVJCL3dFZ0JFSC9BVWdiUWY4QmNRd0JDMEVBQ3pvQUFTQUFBbjhDZnlBQUxRQUNJZ0N6SUFXVHV5QUJvaUlCbVVRQUFBQUFBQURnUVdNRVFDQUJxZ3dCQzBHQWdJQ0FlQXNnQUdvaUFFRUFUZ1JBSUFCQi93RWdBRUgvQVVnYlFmOEJjUXdCQzBFQUN6b0FBZ3NEQUFFTFJnQWdBTDFDLy8vLy8vLy8vLy8vQUlOQ2dJQ0FnSUNBZ1BqL0FGZ0VRQ0FBSUFBZ0FhUWdBYjFDLy8vLy8vLy8vLy8vQUlOQ2dJQ0FnSUNBZ1BqL0FGWWJEd3NnQVF0R0FDQUF2VUwvLy8vLy8vLy8vLzhBZzBLQWdJQ0FnSUNBK1A4QVdBUkFJQUFnQUNBQnBTQUJ2VUwvLy8vLy8vLy8vLzhBZzBLQWdJQ0FnSUNBK1A4QVZoc1BDeUFCQzdrQkFRSi9JQUFDZnlBQUxRQUFJUU1nQXdKL1JBQUFBQUFBd0Y5QUlBS2hJQUdpSWdHWlJBQUFBQUFBQU9CQll3UkFJQUdxREFFTFFZQ0FnSUI0Q3lJRWFpSURRUUJPQkVBZ0EwSC9BU0FEUWY4QlNCdEIvd0Z4REFFTFFRQUxPZ0FBSUFBQ2Z5QUFMUUFCSUFScUlnTkJBRTRFUUNBRFFmOEJJQU5CL3dGSUcwSC9BWEVNQVF0QkFBczZBQUVnQUFKL0lBQXRBQUlnQkdvaUFFRUFUZ1JBSUFCQi93RWdBRUgvQVVnYlFmOEJjUXdCQzBFQUN6b0FBZ3VGQWdFQmZTQUJRUUZHQkVBZ0FBSi9BbjhnQUMwQUFDSUJzeUFDdGlJRGs3dWFJZ0taUkFBQUFBQUFBT0JCWXdSQUlBS3FEQUVMUVlDQWdJQjRDeUFCYWlJQlFRQk9CRUFnQVVIL0FTQUJRZjhCU0J0Qi93RnhEQUVMUVFBTE9nQUFJQUFDZndKL0lBQXRBQUVpQWJNZ0E1TzdtaUlDbVVRQUFBQUFBQURnUVdNRVFDQUNxZ3dCQzBHQWdJQ0FlQXNnQVdvaUFVRUFUZ1JBSUFGQi93RWdBVUgvQVVnYlFmOEJjUXdCQzBFQUN6b0FBU0FBQW44Q2Z5QUFMUUFDSWdDeklBT1R1NW9pQXBsRUFBQUFBQUFBNEVGakJFQWdBcW9NQVF0QmdJQ0FnSGdMSUFCcUlnQkJBRTRFUUNBQVFmOEJJQUJCL3dGSUcwSC9BWEVNQVF0QkFBczZBQUlMQzRJQ0FnRi9BWHdnQUFKL0FuOGdBQzBBQUNJRHN5QUNrN3NnQWFJaUJKbEVBQUFBQUFBQTRFRmpCRUFnQktvTUFRdEJnSUNBZ0hnTElBTnFJZ05CQUU0RVFDQURRZjhCSUFOQi93RklHMEgvQVhFTUFRdEJBQXM2QUFBZ0FBSi9BbjhnQUMwQUFTSURzeUFDazdzZ0FhSWlCSmxFQUFBQUFBQUE0RUZqQkVBZ0JLb01BUXRCZ0lDQWdIZ0xJQU5xSWdOQkFFNEVRQ0FEUWY4QklBTkIvd0ZJRzBIL0FYRU1BUXRCQUFzNkFBRWdBQUovQW44Z0FDMEFBaUlBc3lBQ2s3c2dBYUlpQVpsRUFBQUFBQUFBNEVGakJFQWdBYW9NQVF0QmdJQ0FnSGdMSUFCcUlnQkJBRTRFUUNBQVFmOEJJQUJCL3dGSUcwSC9BWEVNQVF0QkFBczZBQUlMcWdFQkFuOGdBQUovSUFBdEFBQWhBaUFDQW44Z0FabEVBQUFBQUFBQTRFRmpCRUFnQWFvTUFRdEJnSUNBZ0hnTElnTnFJZ0pCQUU0RVFDQUNRZjhCSUFKQi93RklHMEgvQVhFTUFRdEJBQXM2QUFBZ0FBSi9JQUF0QUFFZ0Eyb2lBa0VBVGdSQUlBSkIvd0VnQWtIL0FVZ2JRZjhCY1F3QkMwRUFDem9BQVNBQUFuOGdBQzBBQWlBRGFpSUFRUUJPQkVBZ0FFSC9BU0FBUWY4QlNCdEIvd0Z4REFFTFFRQUxPZ0FDQzVFQkFDQUJRUUZHQkVBZ0FBSi9RZjhCSUFBdEFBQnJJZ0ZCQUU0RVFDQUJRZjhCSUFGQi93RklHMEgvQVhFTUFRdEJBQXM2QUFBZ0FBSi9RZjhCSUFBdEFBRnJJZ0ZCQUU0RVFDQUJRZjhCSUFGQi93RklHMEgvQVhFTUFRdEJBQXM2QUFFZ0FBSi9RZjhCSUFBdEFBSnJJZ0JCQUU0RVFDQUFRZjhCSUFCQi93RklHMEgvQVhFTUFRdEJBQXM2QUFJTEM5SUJBd0ovQlgwRWZDQUFMUUFDSVFFZ0FDMEFBQ0lDdUNJSUlBQXRBQUVpQUxnaUNSQUNJQUc0SWdvUUFpRUxBbjFEQUFBQUFDQUlJQWtRQXlBS0VBTzJJZ01nQzdhVElnUkRBQUFBQUY1QkFYTU5BQm9nQWJNaEJTQUFzeUVHSUFLeklnY2dBMXNFUUNBR0lBV1RJQVNWdXhBTlJBQUFBQUFBQUU1QW9yWU1BUXNnQlNBSGt5QUVsVU1BQUFCQWtrTUFBSEJDbENBRElBWmJEUUFhUXdBQUFBQWdBeUFGWEEwQUdpQUhJQWFUSUFTVlF3QUFnRUNTUXdBQWNFS1VDeUlEUXdBQXRFT1NJQU1nQTBNQUFBQUFYUnNMRUFBakFDQUFhMEZ3Y1NJQUpBQWdBQXNHQUNBQUpBQUxCQUFqQUF1cUF3SUNmd04rQWtBZ0FMMGlCVUkwaUtkQi93OXhJZ0ZCL3c5SERRQWdBRVFBQUFBQUFBQVlRS0lpQUNBQW93OExJQVZDQVlZaUEwS0FnSUNBZ0lDQW1JQi9WZ1JBQW40Z0FVVUVRRUVBSVFFZ0JVSU1oaUlEUWdCWkJFQURRQ0FCUVFGcklRRWdBMElCaGlJRFFuOVZEUUFMQ3lBRlFRRWdBV3V0aGd3QkN5QUZRdi8vLy8vLy8vOEhnMEtBZ0lDQWdJQ0FDSVFMSVFNZ0FVR0JDRW9FUUFOQUFrQWdBMEtBZ0lDQWdJQ0FESDBpQkVJQVV3MEFJQVFpQTBJQVVnMEFJQUJFQUFBQUFBQUFBQUNpRHdzZ0EwSUJoaUVESUFGQkFXc2lBVUdCQ0VvTkFBdEJnUWdoQVFzQ1FDQURRb0NBZ0lDQWdJQU1mU0lFUWdCVERRQWdCQ0lEUWdCU0RRQWdBRVFBQUFBQUFBQUFBS0lQQ3dKQUlBTkMvLy8vLy8vLy93ZFdCRUFnQXlFRURBRUxBMEFnQVVFQmF5RUJJQU5DZ0lDQWdJQ0FnQVJVSVFJZ0EwSUJoaUlFSVFNZ0FnMEFDd3NnQlVLQWdJQ0FnSUNBZ0lCL2d5RURJQUZCQVU0RWZpQUVRb0NBZ0lDQWdJQUlmU0FCclVJMGhvUUZJQVJCQVNBQmE2MklDeUFEaEw4UEN5QUFSQUFBQUFBQUFBQUFvaUFBSUFOQ2dJQ0FnSUNBZ0ppQWYxRWJDL0VEQWdKL0Rud2dBMEVCVGdSQUlBSXNBQXUzUkFBQUFBQUFBRmxBb3lFSUlBSXNBQXEzUkFBQUFBQUFBRmxBb3lFSklBSXNBQW0zUkFBQUFBQUFBRmxBb3lFS0lBSXNBQWkzUkFBQUFBQUFBRmxBb3lFTElBSXNBQWUzUkFBQUFBQUFBRmxBb3lFTUlBSXNBQWEzUkFBQUFBQUFBRmxBb3lFTklBSXNBQVczUkFBQUFBQUFBRmxBb3lFT0lBSXNBQVMzUkFBQUFBQUFBRmxBb3lFUElBSXNBQU8zUkFBQUFBQUFBRmxBb3lFUUlBSXNBQUszUkFBQUFBQUFBRmxBb3lFUklBSXNBQUczUkFBQUFBQUFBRm5Bb3lFU0lBRXRBQUVoQkNBQkxRQUFJUVVnQWl3QUFMY2hFMEVBSVFFRFFDQUFJQUZxSWdJZ0JSQUlJQUlnQkNBQ0xRQUNJQUl0QUFFZ0FpMEFBR3BxdDBRQUFBQUFBQUFJUUtNUUJTQUNJQk1RQnlBQ0lCSWdBaTBBQWlBQ0xRQUJJQUl0QUFCcWFyZEVBQUFBQUFBQUNFQ2pFQVFnQWlBUklBSXRBQUlnQWkwQUFTQUNMUUFBYW1xM1JBQUFBQUFBQUFoQW95SUd0aEFHSUFJZ0VDQUdJQUlRQ2JzaUIwSHlBQkFBSUFJZ0R5QUdJQWRCN3dBUUFDQUNJQTRnQmlBSFFma0FFQUFnQWlBTklBWWdCMEhuQUJBQUlBSWdEQ0FHSUFkQjlBQVFBQ0FDSUFzZ0JpQUhRZU1BRUFBZ0FpQUtJQVlnQjBIaUFCQUFJQUlnQ1NBR0lBZEI4QUFRQUNBQ0lBZ2dCaUFIUWUwQUVBQWdBVUVFYWlJQklBTklEUUFMQ3dzPSI7UChCKXx8KEI9b0EoQikpO2Z1bmN0aW9uIHRBKEEpe3RyeXtpZihBPT1CJiZEKXJldHVybiBuZXcgVWludDhBcnJheShEKTt2YXIgbj13KEEpO2lmKG4pcmV0dXJuIG47aWYoaClyZXR1cm4gaChBKTt0aHJvdyJib3RoIGFzeW5jIGFuZCBzeW5jIGZldGNoaW5nIG9mIHRoZSB3YXNtIGZhaWxlZCJ9Y2F0Y2godCl7Uyh0KX19ZnVuY3Rpb24gU0EoKXtpZighRCYmKFJ8fFEpKXtpZih0eXBlb2YgZmV0Y2g9PSJmdW5jdGlvbiImJiFyQShCKSlyZXR1cm4gZmV0Y2goQix7Y3JlZGVudGlhbHM6InNhbWUtb3JpZ2luIn0pLnRoZW4oZnVuY3Rpb24oQSl7aWYoIUEub2spdGhyb3ciZmFpbGVkIHRvIGxvYWQgd2FzbSBiaW5hcnkgZmlsZSBhdCAnIitCKyInIjtyZXR1cm4gQS5hcnJheUJ1ZmZlcigpfSkuY2F0Y2goZnVuY3Rpb24oKXtyZXR1cm4gdEEoQil9KTtpZihUKXJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihBLG4pe1QoQixmdW5jdGlvbih0KXtBKG5ldyBVaW50OEFycmF5KHQpKX0sbil9KX1yZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpe3JldHVybiB0QShCKX0pfWZ1bmN0aW9uIGJBKCl7dmFyIEE9e2E6TEF9O2Z1bmN0aW9uIG4oYSxpKXt2YXIgcz1hLmV4cG9ydHM7ci5hc209cyxYPXIuYXNtLmEseUEoWC5idWZmZXIpLEo9ci5hc20uZyxEQSgpfUZBKCk7ZnVuY3Rpb24gdChhKXtuKGEuaW5zdGFuY2UpfWZ1bmN0aW9uIGUoYSl7cmV0dXJuIFNBKCkudGhlbihmdW5jdGlvbihpKXtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoaSxBKX0pLnRoZW4oYSxmdW5jdGlvbihpKXtGKCJmYWlsZWQgdG8gYXN5bmNocm9ub3VzbHkgcHJlcGFyZSB3YXNtOiAiK2kpLFMoaSl9KX1mdW5jdGlvbiBmKCl7cmV0dXJuIUQmJnR5cGVvZiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZz09ImZ1bmN0aW9uIiYmIVAoQikmJiFyQShCKSYmdHlwZW9mIGZldGNoPT0iZnVuY3Rpb24iP2ZldGNoKEIse2NyZWRlbnRpYWxzOiJzYW1lLW9yaWdpbiJ9KS50aGVuKGZ1bmN0aW9uKGEpe3ZhciBpPVdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlU3RyZWFtaW5nKGEsQSk7cmV0dXJuIGkudGhlbih0LGZ1bmN0aW9uKHMpe3JldHVybiBGKCJ3YXNtIHN0cmVhbWluZyBjb21waWxlIGZhaWxlZDogIitzKSxGKCJmYWxsaW5nIGJhY2sgdG8gQXJyYXlCdWZmZXIgaW5zdGFudGlhdGlvbiIpLGUodCl9KX0pOmUodCl9aWYoci5pbnN0YW50aWF0ZVdhc20pdHJ5e3ZhciBnPXIuaW5zdGFudGlhdGVXYXNtKEEsbik7cmV0dXJuIGd9Y2F0Y2goYSl7cmV0dXJuIEYoIk1vZHVsZS5pbnN0YW50aWF0ZVdhc20gY2FsbGJhY2sgZmFpbGVkIHdpdGggZXJyb3I6ICIrYSksITF9cmV0dXJuIGYoKS5jYXRjaCh2KSx7fX1mdW5jdGlvbiBHKEEpe2Zvcig7QS5sZW5ndGg+MDspe3ZhciBuPUEuc2hpZnQoKTtpZih0eXBlb2Ygbj09ImZ1bmN0aW9uIil7bihyKTtjb250aW51ZX12YXIgdD1uLmZ1bmM7dHlwZW9mIHQ9PSJudW1iZXIiP24uYXJnPT09dm9pZCAwP0ouZ2V0KHQpKCk6Si5nZXQodCkobi5hcmcpOnQobi5hcmc9PT12b2lkIDA/bnVsbDpuLmFyZyl9fWZ1bmN0aW9uIGVBKEEpe2Zvcih2YXIgbj1bXSx0PTA7dDxBLmxlbmd0aDt0Kyspe3ZhciBlPUFbdF07ZT4yNTUmJihlJj0yNTUpLG4ucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGUpKX1yZXR1cm4gbi5qb2luKCIiKX12YXIgSEE9dHlwZW9mIGF0b2I9PSJmdW5jdGlvbiI/YXRvYjpmdW5jdGlvbihBKXt2YXIgbj0iQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0iLHQ9IiIsZSxmLGcsYSxpLHMsRSxjPTA7QT1BLnJlcGxhY2UoL1teQS1aYS16MC05XCtcL1w9XS9nLCIiKTtkbyBhPW4uaW5kZXhPZihBLmNoYXJBdChjKyspKSxpPW4uaW5kZXhPZihBLmNoYXJBdChjKyspKSxzPW4uaW5kZXhPZihBLmNoYXJBdChjKyspKSxFPW4uaW5kZXhPZihBLmNoYXJBdChjKyspKSxlPWE8PDJ8aT4+NCxmPShpJjE1KTw8NHxzPj4yLGc9KHMmMyk8PDZ8RSx0PXQrU3RyaW5nLmZyb21DaGFyQ29kZShlKSxzIT09NjQmJih0PXQrU3RyaW5nLmZyb21DaGFyQ29kZShmKSksRSE9PTY0JiYodD10K1N0cmluZy5mcm9tQ2hhckNvZGUoZykpO3doaWxlKGM8QS5sZW5ndGgpO3JldHVybiB0fTtmdW5jdGlvbiBHQShBKXtpZih0eXBlb2YgbD09ImJvb2xlYW4iJiZsKXt2YXIgbjt0cnl7bj1CdWZmZXIuZnJvbShBLCJiYXNlNjQiKX1jYXRjaHtuPW5ldyBCdWZmZXIoQSwiYmFzZTY0Iil9cmV0dXJuIG5ldyBVaW50OEFycmF5KG4uYnVmZmVyLG4uYnl0ZU9mZnNldCxuLmJ5dGVMZW5ndGgpfXRyeXtmb3IodmFyIHQ9SEEoQSksZT1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCksZj0wO2Y8dC5sZW5ndGg7KytmKWVbZl09dC5jaGFyQ29kZUF0KGYpO3JldHVybiBlfWNhdGNoe3Rocm93IG5ldyBFcnJvcigiQ29udmVydGluZyBiYXNlNjQgc3RyaW5nIHRvIGJ5dGVzIGZhaWxlZC4iKX19ZnVuY3Rpb24gdyhBKXtpZighIVAoQSkpcmV0dXJuIEdBKEEuc2xpY2UobkEubGVuZ3RoKSl9dmFyIExBPXt9O2JBKCk7dmFyIGlBPXIuX19fd2FzbV9jYWxsX2N0b3JzPWZ1bmN0aW9uKCl7cmV0dXJuKGlBPXIuX19fd2FzbV9jYWxsX2N0b3JzPXIuYXNtLmIpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07ci5fcmVuZGVyPWZ1bmN0aW9uKCl7cmV0dXJuKHIuX3JlbmRlcj1yLmFzbS5jKS5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBhQT1yLnN0YWNrU2F2ZT1mdW5jdGlvbigpe3JldHVybihhQT1yLnN0YWNrU2F2ZT1yLmFzbS5kKS5hcHBseShudWxsLGFyZ3VtZW50cyl9LGZBPXIuc3RhY2tSZXN0b3JlPWZ1bmN0aW9uKCl7cmV0dXJuKGZBPXIuc3RhY2tSZXN0b3JlPXIuYXNtLmUpLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sTz1yLnN0YWNrQWxsb2M9ZnVuY3Rpb24oKXtyZXR1cm4oTz1yLnN0YWNrQWxsb2M9ci5hc20uZikuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtyLmNjYWxsPWosci5jd3JhcD1CQTt2YXIgTDtmdW5jdGlvbiBUQShBKXt0aGlzLm5hbWU9IkV4aXRTdGF0dXMiLHRoaXMubWVzc2FnZT0iUHJvZ3JhbSB0ZXJtaW5hdGVkIHdpdGggZXhpdCgiK0ErIikiLHRoaXMuc3RhdHVzPUF9VT1mdW5jdGlvbiBBKCl7THx8VygpLEx8fChVPUEpfTtmdW5jdGlvbiBXKEEpe2lmKHk+MHx8KFJBKCkseT4wKSlyZXR1cm47ZnVuY3Rpb24gbigpe0x8fChMPSEwLHIuY2FsbGVkUnVuPSEwLCF6JiYobUEoKSxwQSgpLGIociksci5vblJ1bnRpbWVJbml0aWFsaXplZCYmci5vblJ1bnRpbWVJbml0aWFsaXplZCgpLHZBKCkpKX1yLnNldFN0YXR1cz8oci5zZXRTdGF0dXMoIlJ1bm5pbmcuLi4iKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe3Iuc2V0U3RhdHVzKCIiKX0sMSksbigpfSwxKSk6bigpfWlmKHIucnVuPVcsci5wcmVJbml0KWZvcih0eXBlb2Ygci5wcmVJbml0PT0iZnVuY3Rpb24iJiYoci5wcmVJbml0PVtyLnByZUluaXRdKTtyLnByZUluaXQubGVuZ3RoPjA7KXIucHJlSW5pdC5wb3AoKSgpO3JldHVybiBXKCksci5yZWFkeX19KCk7SUEoKS50aGVuKHA9Pntjb25zdCByPXAuY3dyYXAoInJlbmRlciIsIm51bWJlciIsWyJudW1iZXIiLCJhcnJheSIsImFycmF5IiwibnVtYmVyIl0pO29ubWVzc2FnZT1iPT57Y29uc3R7c2V0dGluZ3NWYWx1ZXM6dixjb250cm9sVmFsdWVzOnUsaW1hZ2VEYXRhOkksbG9hZDpSfT1iLmRhdGE7aWYoIVIpe2NvbnN0IFE9bmV3IFVpbnQ4QXJyYXkocC5IRUFQOC5idWZmZXIsMCxJLmRhdGEubGVuZ3RoKTtRLnNldChJLmRhdGEpLHIoMCx2LHUsSS5kYXRhLmxlbmd0aCksSS5kYXRhLnNldChRKSxwb3N0TWVzc2FnZShJKX19fSl9KSgpO30pKCk7Cg==",o=typeof window!="undefined"&&window.Blob&&new Blob([atob(h)],{type:"text/javascript;charset=utf-8"});function C(){const Q=o&&(window.URL||window.webkitURL).createObjectURL(o);try{return Q?new Worker(Q):new Worker("data:application/javascript;base64,"+h,{type:"module"})}finally{Q&&(window.URL||window.webkitURL).revokeObjectURL(Q)}}const t=document.createElement("canvas"),c=document.createElement("canvas"),p=t.getContext("2d"),I=c.getContext("2d");async function T(Q,F){if(F&&F[0]){Q.innerHTML="";const B=F[0],l=await r(B);Q.appendChild(t);const U=new Image;U.src=l.toString(),U.onload=()=>{const d=x(U.width,U.height);t.setAttribute("width",d.width.toString()),t.setAttribute("height",d.height.toString()),p.drawImage(U,0,0,t.width,t.height),c.setAttribute("width",d.width.toString()),c.setAttribute("height",d.height.toString()),I.drawImage(U,0,0,c.width,c.height),g(Q,U)}}}function L(Q,F,B,l,U){const d=document.createElement("button");d.textContent="Export",d.onclick=()=>k(F,B,l,U),Q.appendChild(d)}function g(Q,F){const B={invert:X("Invert",Q),bw:X("Black & White",Q)},l={brightness:n(-100,100,"Brightness",0,Q),contrast:n(-100,100,"Contrast",0,Q),saturation:n(-100,100,"Saturation",0,Q),redSaturation:n(-100,100,"Red Saturation",0,Q),orangeSaturation:n(-100,100,"Orange Saturation",0,Q),yellowSaturation:n(-100,100,"Yellow Saturation",0,Q),greenSaturation:n(-100,100,"Green Saturation",0,Q),tealSaturation:n(-100,100,"Teal Saturation",0,Q),cyanSaturation:n(-100,100,"Cyan Saturation",0,Q),blueSaturation:n(-100,100,"Blue Saturation",0,Q),purpleSaturation:n(-100,100,"Purple Saturation",0,Q),magentaSaturation:n(-100,100,"Magenta Saturation",0,Q)},U=new C;U.postMessage({load:!0});const d=J(J({},B),l);L(Q,F,B,l,U),Object.values(d).forEach(Z=>Z.addEventListener("change",()=>a(c,I,p,B,l,U)))}function r(Q){return new Promise((F,B)=>{const l=new FileReader;l.readAsDataURL(Q),l.onload=()=>F(l.result?l.result.toString():""),l.onerror=U=>B(U)})}function x(Q,F){const B=window.innerHeight*.5,l=window.innerWidth*.5;let U;return Q>F?U={width:l,height:l*F/Q}:U={width:B*Q/F,height:B},U}const E=document.querySelector("#app"),e=document.createElement("input");e.setAttribute("type","file");E.appendChild(e);e.addEventListener("change",()=>{T(E,e.files)});
